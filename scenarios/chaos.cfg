#textdomain wesnoth-multiplayer

#define EOHS_CHAOS_SHARED
    map_data="border_size=1
usage=map

Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf
Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf
Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf
Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf
Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf
Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf
Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, 6 Khw^Ecf, Chw^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf
Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, 3 Khw^Ecf, Chw^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf
Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf
Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf
Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf
Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf
Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf
Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf
Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, 2 Khw^Ecf, Chw^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf
Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf
Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf
Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf
Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf
Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf
Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, 1 Khw^Ecf, Chw^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf
Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf
Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf
Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf
Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf
Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf
Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf
Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf
Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, 4 Khw^Ecf, Chw^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf
Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, 5 Khw^Ecf, Chw^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf
Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf
Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf
Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf
Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf
Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf
Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf, Wo^Ecf
"

    {DEFAULT_SCHEDULE}
    {DEFAULT_MUSIC_PLAYLIST}
    
    
    {EOHS_EVENTS () ("") ("")}
    
    [event]
      name=side 1 turn 1
      first_time_only=no
      [lua]
        code=<<--chaos start
local getmetatable,ipairs,next,pairs,setmetatable,tonumber,tostring,type,unpack = getmetatable,ipairs,next,pairs,setmetatable,tonumber,tostring,type,unpack
local wesnoth,table,string,math,os,debug,helper,_,EoHS,_G,_ENV = wesnoth,table,string,math,os,debug,EoHS.helper,EoHS._,EoHS,_G,nil

EoHS.begin_event (true, true, true)
local width, height = wesnoth.current.map.playable_width, wesnoth.current.map.playable_height


local units = wesnoth.units.find_on_map ({})
local number_of_leaders = 0
for index, unit in ipairs (units) do
  if unit.canrecruit then
    number_of_leaders = number_of_leaders + 1
    wesnoth.units.extract (unit)
    while true do
      unit.x = EoHS.random ("1.."..width)
      unit.y = EoHS.random ("1.."..height)
      if EoHS.distance_between (unit.x, unit.y, 18, 18) <= EoHS.random ("12..15") and EoHS.distance_between (unit.x, unit.y, 18, 18) >= EoHS.random ("3..6") then
        local too_close = false
        for previous = 1,index - 1 do
          if EoHS.distance_between (unit.x, unit.y, units [previous].x, units [previous].y) <= EoHS.random ("4..7") then
            too_close = true
          end
        end
        if not too_close then
          break
        end
      end
    end
    wesnoth.units.to_map (unit)
  end
end
EoHS.set_variable ("chaos_survival_sides", number_of_leaders)


for x=0,width+1 do for y=0,height+1 do
  wesnoth.current.map[{x, y}] = "Wo"
end end

local villages = 0
while villages < 25 do
  local x = EoHS.random ("1.."..width)
  local y = EoHS.random ("1.."..height)
  local alone = true
  for this, that in helper.adjacent_tiles (x,y) do
    if wesnoth.current.map[{this, that}] == "Ww^Vm" then alone = false end
  end
  if alone and EoHS.distance_between (x, y, 18, 18) <= EoHS.random ("8..16") and EoHS.random ("1.." ..20) == 1 then
    wesnoth.current.map[{x, y}] = "Ww^Vm"
    villages = villages + 1
  end
end


for index = 1,34 do
      local parameters = {
        action_id = "permanent_expansive_change",
        terrain_change_shape = "expansive_change",
      }

      while not (parameters.target_x and EoHS.distance_between (parameters.target_x, parameters.target_y, 18, 18) <= EoHS.random ("1..10")) do
        parameters.target_x = EoHS.random ("1.."..width)
        parameters.target_y = EoHS.random ("1.."..height)
        parameters.src_x = parameters.target_x
        parameters.src_y = parameters.target_y
      end
      
      parameters.terrain_change_type = EoHS.random ("raise,sink,flatten,flatten,heat,cool,temperate,temperate,grow,grow,rot,clear,clear,clear")
      if index <= EoHS.random ("1..43") then parameters.terrain_change_type = EoHS.random ("raise,flatten,flatten,flatten,flatten") end
            
      EoHS.try_action (parameters)
end


for index, unit in ipairs (units) do
  if unit.canrecruit then
      local parameters = {
        action_id = "construction",
        target_x = unit.x,
        target_y = unit.y,
        src_x = unit.x,
        src_y = unit.y,
        terrain_change_type = "castle",
        terrain_change_shape = "construction",
      }
      
      EoHS.try_action (parameters)
  end
end

EoHS.end_event()
        >>
      [/lua]
    [/event]
#enddef

[multiplayer]
    id=EoHS_Plane_of_Chaos
    name= _ "EoHS — 2-6p — The Plane of Chaos"
    description= _ "A random map where random magic happens randomly every turn."

    {EOHS_CHAOS_SHARED}

    [side]
        side=1
        canrecruit=yes
        controller=human
        fog=yes
    [/side]
    [side]
        side=2
        canrecruit=yes
        controller=human
        fog=yes
    [/side]
    [side]
        side=3
        canrecruit=yes
        controller=human
        fog=yes
    [/side]
    [side]
        side=4
        canrecruit=yes
        controller=human
        fog=yes
    [/side]
    [side]
        side=5
        canrecruit=yes
        controller=human
        fog=yes
    [/side]
    [side]
        side=6
        canrecruit=yes
        controller=human
        fog=yes
    [/side]

    
    [event]
      name=turn_refresh
      first_time_only=no
      [lua]
        code=<<--chaos turn
EoHS.begin_event (true, true, true)
if wesnoth.current.turn >= 2 then
  EoHS.do_random_spell()
  EoHS.do_random_spell()
  EoHS.do_random_spell()
end
EoHS.end_event()
        >>
      [/lua]
    [/event]
[/multiplayer]

[multiplayer]
    id=EoHS_Plane_of_Chaos_Survival
    name= _ "EoHS — 1-6p — Chaos Survival"
    description= _ "Try to destroy the Tower of Chaos before its random spells and hordes of summoned monsters overwhelm you! This map can be played either with or without EoHS; if you don't use EoHS, there are fewer enemies to compensate."

    {EOHS_CHAOS_SHARED}

    [side]
        side=1
        canrecruit=no
        controller=ai
        allow_player=no
        disallow_observers=yes
        no_leader=yes
        fog=no
        team_name=chaos
    [/side]
    [side]
        side=2
        canrecruit=yes
        controller=human
        gold=75
        fog=no
        team_name=humans
    [/side]
    [side]
        side=3
        canrecruit=yes
        controller=human
        gold=75
        fog=no
        team_name=humans
    [/side]
    [side]
        side=4
        canrecruit=yes
        controller=human
        gold=75
        fog=no
        team_name=humans
    [/side]
    [side]
        side=5
        canrecruit=yes
        controller=human
        gold=75
        fog=no
        team_name=humans
    [/side]
    [side]
        side=6
        canrecruit=yes
        controller=human
        gold=75
        fog=no
        team_name=humans
    [/side]
    [side]
        side=7
        canrecruit=yes
        controller=human
        gold=75
        fog=no
        team_name=humans
    [/side]
    
    
    [event]
      name=preload
      first_time_only=no
      [lua]
        code=<<--chaos surv prelo
EoHS_tower_of_chaos_casts = function (parameters)
  local tower = EoHS.get_unit (18, 18)
  parameters.src_x = 18
  parameters.src_y = 18
  parameters.side = tower.side
  parameters.actor_id = EoHS.unit_id (tower)
  local committed_parameters = EoHS.committed_parameters (parameters)
  -- currently, deliberately not checking whether the whole action (e.g. costs) is valid
  if EoHS.target_is_valid (committed_parameters, {ignore_range=true}) then
    EoHS.do_action (committed_parameters)
    return true
  end
end
        >>
      [/lua]
    [/event]
    
    
    [event]
      name=side 1 turn 1
      first_time_only=no
      [lua]
        code=<<--chaos surv start
local getmetatable,ipairs,next,pairs,setmetatable,tonumber,tostring,type,unpack = getmetatable,ipairs,next,pairs,setmetatable,tonumber,tostring,type,unpack
local wesnoth,table,string,math,os,debug,helper,_,EoHS,EoHS_tower_of_chaos_casts,_G,_ENV = wesnoth,table,string,math,os,debug,EoHS.helper,EoHS._,EoHS,EoHS_tower_of_chaos_casts,_G,nil

EoHS.begin_event (true, true, true)

local tower = {
  x=18,y=18,
  side = 1,
  canrecruit = true,
  type = "Boat",
  name = _"The Tower of Chaos",
  unrenamable = true, -- hack to make its appellation be its name
  {"modifications", {
    {"object", {
      {"effect", {
        apply_to = "hitpoints",
        increase_total = 100-48
      }},
    }},
  }},
}
EoHS.set_unit_variable (tower, "is_tower", true)
EoHS.set_unit_variable (tower, "mana", 1000000)
EoHS.update_all_type_adjustments (tower)

EoHS.put_unit (tower, {allow_unknown_id = true, allow_new_location = true})

EoHS_tower_of_chaos_casts ({target_x = 18, target_y = 18, action_id = "circle_of_protection",})

EoHS.end_event()
        >>
      [/lua]
    [/event]

    [event]
      name=turn_refresh
      first_time_only=no
      [lua]
        code=<<--chaos surv turn
local getmetatable,ipairs,next,pairs,setmetatable,tonumber,tostring,type,unpack = getmetatable,ipairs,next,pairs,setmetatable,tonumber,tostring,type,unpack
local wesnoth,table,string,math,os,debug,helper,_,EoHS,EoHS_tower_of_chaos_casts,_G,_ENV = wesnoth,table,string,math,os,debug,EoHS.helper,EoHS._,EoHS,EoHS_tower_of_chaos_casts,_G,nil

EoHS.begin_event (true, true, true)
if wesnoth.current.side == 1 then
  
  -- important: with fog, the tower isn't necessarily allowed to summon stuff!
  wesnoth.sides[1].fog = false
  
  local width, height = wesnoth.current.map.playable_width, wesnoth.current.map.playable_height
      local parameters = {
        action_id = "permanent_expansive_change",
        terrain_change_shape = "expansive_change",
        terrain_change_type = EoHS.random ("raise,sink,flatten,flatten,heat,cool,temperate,temperate,grow,grow,rot,clear,clear,clear")
      }

      while not (parameters.target_x and EoHS.distance_between (parameters.target_x, parameters.target_y, 18, 18) <= EoHS.random ("1..10")) do
        parameters.target_x = EoHS.random ("1.."..width)
        parameters.target_y = EoHS.random ("1.."..height)
      end
  
  EoHS_tower_of_chaos_casts(parameters)
  if not EoHS_tower_of_chaos_casts({target_x = 18, target_y = 18, action_id = "circle_of_protection",}) then -- EoHS.get_circle_of_protection (18, 18) then
    EoHS_tower_of_chaos_casts({target_x = 18, target_y = 18, action_id = "aegis", force_aegis_radius = 3,})
  else
    --EoHS_tower_of_chaos_casts({target_x = 18, target_y = 18, action_id = "circle_of_protection",})
  end
  
  local spells = math.floor(
    (1+EoHS.get_variable ("chaos_survival_sides"))
    *(12+wesnoth.current.turn)
    *(EoHS.get_variable ("actual_magic_loaded") and 3 or 2)
    /30
  )
  local units = EoHS.get_units ({})
  local tower = EoHS.get_unit (18, 18)
  local failures = 0
  while spells > 0 do
    local unit
    local choose_enemy = EoHS.random ("true,false,false,false")
    while not (unit and ((unit.side ~= 1) == choose_enemy)) do
      unit = units [EoHS.random ("1.."..#units)]
    end
    local parameters = {}
    if wesnoth.current.turn > 1 and (unit.x ~= 18 or unit.y ~= 18) and EoHS.random ("true,false") then
      parameters.target_x = unit.x
      parameters.target_y = unit.y
      if unit.side == 1 then
        parameters.action_id = EoHS.random ("wizard_sword,mage_shield,regeneration,metamorphosis,metamorphosis,metamorphosis,dark_pact"..((wesnoth.current.turn < 8) and "" or ",haste"))
        parameters.shield_power = 99
      else
        parameters.action_id = EoHS.random ("energy_blast,curse_of_anxiety"
          ..((wesnoth.current.turn < 8) and "" or ",dehydration,lightning_bolt")
          ..((EoHS.distance_between (unit.x, unit.y, 18, 18) > EoHS.random ("1..6")) and "" or ",siphon_strength,siphon_strength,siphon_strength"))
      end
    else
      -- hack: bypass circles of protection because it would be a cheap tactic to just surround it with circles of protection
      local nearby_locations = EoHS.find_reach (18, 18, EoHS.passable_only (nil), 3)
      local choice
      for attempt = 1, 5 do
        choice = nearby_locations[EoHS.random("1.."..#nearby_locations)]
        if not EoHS.get_unit (choice.x, choice.y) then break end
      end
      parameters.target_x = choice.x
      parameters.target_y = choice.y
      if EoHS.get_unit (choice.x, choice.y) then
        parameters.action_id = "repelling_gust"
      else
        parameters.action_id = EoHS.random (
          "summon_fire_guardian,summon_fire_guardian,summon_wolf,summon_wolf,summon_wolf,summon_giant_scorpion,summon_vampire_bat,summon_skeleton,summon_skeleton_archer,summon_ghost"
          ..(
            (wesnoth.current.turn < EoHS.random ("4..12")) and "" or
            ",summon_arctic_drake,summon_water_serpent,summon_gryphon,summon_chocobone"
          )
          ..(
            (string.find( wesnoth.current.map[{choice.x, choice.y}], "%^F") == nil) and "" or
            ",summon_wose,summon_wose,summon_wose,summon_wose,summon_wose,summon_wose,summon_wose,summon_wose,summon_wose,summon_wose"
          )
        )
      end
    end
    if EoHS_tower_of_chaos_casts(parameters) then
      spells = spells - 1
      units = EoHS.get_units ({})
    else
      failures = failures + 1
      if failures >= 100 + spells * 10 then
        EoHS.debug("The Tower of Chaos failed "..failures.." times to find a spell to cast. This should be unlikely to the point of impossibility.")
        break
      end
    end
  end
end

EoHS.end_event()
        >>
      [/lua]
    [/event]
[/multiplayer]
