this_parses_in_both_wml_and_lua=hackily--{EOHS_LUA_FILE (<<-- restraint.cfg
-- #textdomain wesnoth-Era_of_High_Sorcery
local getmetatable,ipairs,next,pairs,setmetatable,tonumber,tostring,type = getmetatable,ipairs,next,pairs,setmetatable,tonumber,tostring,type
local wesnoth,table,string,math,os,debug,wml,gui,filesystem,helper,_,EoHS,_G,_ENV = wesnoth,table,string,math,os,debug,wml,gui,filesystem,EoHS.helper,EoHS._,EoHS,_G,nil

EoHS.make_spell("restraint", {
  image = "attacks/druidstaff.png",
  name = _"Restraint",
  description = _"You enchant a unit to avoid killing for seven turns. If it would kill a unit that started with more than one hitpoint, that unit is left alive at one hitpoint. Casting the spell again on the same unit increases the duration by seven turns.",
  
  is_enchantment = true,
  
  base_cost = { action_points=5, mana=1 },
  base_range = 1,
  
  target_dependent_stuff = EoHS.simple_unit_target("change"),
  
  happen = function(parameters, extras)
    EoHS.begin_casting(parameters.actor_id, parameters.target_x, parameters.target_y)
    local unit = EoHS.get_unit(parameters.target_x, parameters.target_y)
    EoHS.set_unit_variable(unit, "restraint_turns", (EoHS.get_unit_variable(unit, "restraint_turns") or 0) + 7)
    EoHS.update_conditional_abilities(unit)
    EoHS.update_unit_graphics(unit)
    EoHS.put_unit(unit, {immediate=true})
    wesnoth.interface.float_label(unit.x, unit.y, "<span color='#ffffff'>".._"restrained".."</span>")
    extras.do_on_clients_who_see(function() wml.fire("sound", { name = "net.wav" }) end)
    EoHS.finish_casting(parameters.actor_id)
  end,
})

EoHS.remove_restraint = function(unit)
  EoHS.set_unit_variable(unit, "restraint_turns")
  EoHS.update_conditional_abilities(unit)
  EoHS.update_unit_graphics(unit)
end

EoHS.at_side_turn_end("restraint_turns", function(units)
  for i,unit in ipairs(units.with_variable.restraint_turns or {}) do
    if unit.side == wesnoth.current.side then
      local turns_left = EoHS.get_unit_variable(unit, "restraint_turns") - 1
      if turns_left > 0 then
        EoHS.set_unit_variable(unit, "restraint_turns", turns_left)
        EoHS.update_conditional_abilities(unit)
      else
        EoHS.remove_restraint(unit)
      end
      EoHS.put_unit(unit)
    end
  end
end)

EoHS.make_conditional_ability("restraint", function(unit) if EoHS.get_unit_variable(unit, "restraint_turns") then
  local turns_left = EoHS.get_unit_variable(unit, "restraint_turns")
  local name = EoHS.substitute(_"restrained ($1|)", {turns_left})
  local description
  if turns_left == 1 then description = _"If this unit would kill a unit that started with more than one hitpoint, that unit is left alive at one hitpoint. This enchantment will end at the end of its turn."
  else description = EoHS.substitute(_"If this unit would kill a unit that started with more than one hitpoint, that unit is left alive at one hitpoint. This enchantment will end at the end of its turn in $1| more turns.", {turns_left}) end
  return { "dummy", {
    name = name,
    description = description,
  }}
end end)

-->>)}
