this_parses_in_both_wml_and_lua=hackily--{EOHS_LUA_FILE (<<-- ogre_fury.cfg
-- #textdomain wesnoth-Era_of_High_Sorcery
local getmetatable,ipairs,next,pairs,setmetatable,tonumber,tostring,type = getmetatable,ipairs,next,pairs,setmetatable,tonumber,tostring,type
local wesnoth,table,string,math,os,debug,wml,helper,_,EoHS,_G,_ENV = wesnoth,table,string,math,os,debug,wml,EoHS.helper,EoHS._,EoHS,_G,nil

EoHS.end_ogre_fury = function(unit)
  EoHS.set_unit_variable(unit, "ogre_fury")
  local ogre_hitpoints = unit.hitpoints
  local original_hitpoints = EoHS.get_unit_variable(unit, "ogre_fury_original_hitpoints")
  EoHS.update_all_type_adjustments(unit)
  unit.hitpoints = math.min(unit.max_hitpoints, ogre_hitpoints, original_hitpoints)
  EoHS.set_unit_variable(unit, "ogre_fury_attacked_this_turn")
  EoHS.set_unit_variable(unit, "ogre_fury_original_hitpoints")
end
EoHS.at_side_turn_end("ogre_fury", function(units)
  for i,unit in ipairs(units.with_variable.ogre_fury or {}) do
    if unit.side == wesnoth.current.side then
      if EoHS.get_unit_variable(unit, "ogre_fury_attacked_this_turn") then
        EoHS.set_unit_variable(unit, "ogre_fury_attacked_this_turn")
        EoHS.set_unit_variable(unit, "ogre_fury_original_hitpoints", EoHS.get_unit_variable(unit, "ogre_fury_original_hitpoints") + 10)
        EoHS.update_conditional_abilities(unit)
      else
        EoHS.end_ogre_fury(unit)
      end
      EoHS.put_unit(unit)
    end
  end
end)

local humanoid_races = {dwarf=true,elf=true,goblin=true,human=true,dunefolk=true,lizard=true,merman=true,naga=true,ogre=true,orc=true,troll=true}

EoHS.make_spell("ogre_fury", {
  image = {image_modded="units/ogres/ogre-attack5.png", offset={x=-1,y=2}},
  name = _"Ogre Fury",
  description = _"You suddenly grow the target humanoid unit into a hulking ogre, and it is healed to full hitpoints. However, it must attack immediately after transforming, and it only remains an ogre for as long as it attacks every turn. Once it ends a turn without attacking, it changes back. When it changes back, it might lose hitpoints again - it can only keep its old hitpoints plus 10 for each turn it remained an ogre. If you cast Ogre Fury on yourself, you get back enough AP to attack. You cannot cast spells while in ogre form. You can cast Ogre Fury on enemies if you want, but not on enemy wizards.",
  
  base_cost = { action_points=6, mana=6 },
  base_range = 1,
  
  target_dependent_stuff = EoHS.simple_unit_target("change", function (unit, parameters, stuff)
    if not humanoid_races[unit.race] then
      return _"Only humanoids (dwarves, elves, goblins, humans, saurians, merfolk, nagas, orcs, and trolls) can grow into ogres."
    elseif parameters.side and wesnoth.is_enemy(unit.side, parameters.side) and EoHS.get_unit_variable(unit, "is_wizard") then
      return _"You can't turn an enemy wizard into an ogre."
    elseif unit.race == "ogre" then
      return _"This unit is already an ogre."
    elseif (unit.side == wesnoth.current.side) and (unit.attacks_left <= 0) then
      return _"The ogre must attack this turn, and this unit can't attack any more."
      -- TODO: detect whether the unit *can* reach anything to attack it?
    end
  end),
  
  happen = function(parameters, extras)
    EoHS.begin_casting(parameters.actor_id, parameters.target_x, parameters.target_y)
    local unit = EoHS.get_unit(parameters.target_x, parameters.target_y)
    EoHS.set_unit_variable(unit, "ogre_fury", true)
    EoHS.set_unit_variable(unit, "ogre_fury_original_hitpoints", unit.hitpoints)
    EoHS.set_unit_variable(unit, "ogre_fury_attacked_this_turn")
    EoHS.update_all_type_adjustments(unit)
    unit.hitpoints = unit.max_hitpoints
    if EoHS.unit_id(unit) == parameters.actor_id then unit.attacks_left = unit.attacks_left + 1 end
    EoHS.put_unit(unit, {immediate=true})
    extras.do_on_clients_who_see(function() wesnoth.fire("sound", { name = "ogre-hit-1.ogg" }) end)
    wesnoth.float_label(unit.x, unit.y, "<span color='#ffd087'>".._"ogre fury!".."</span>")
    EoHS.finish_casting(parameters.actor_id)
  end,
})

EoHS.make_conditional_ability("ogre_fury", function(unit) if EoHS.get_unit_variable(unit, "ogre_fury") then
  return { "dummy", {
    name = _"ogre fury",
    description = EoHS.substitute(_"If this unit ends a turn without attacking, it will revert to its original form as a $1| with no more than $2| HP.",
      {
        EoHS.unit_type_with_gender_and_variation(EoHS.get_unit_variable(unit, "original_type"), unit.gender, unit.variation).name,
        EoHS.get_unit_variable(unit, "ogre_fury_original_hitpoints")
      })
  }}
end end)

-->>)}
