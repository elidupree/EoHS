this_parses_in_both_wml_and_lua=hackily--{EOHS_LUA_FILE (<<-- aegis.cfg
-- #textdomain wesnoth-Era_of_High_Sorcery
local getmetatable,ipairs,next,pairs,setmetatable,tonumber,tostring,type = getmetatable,ipairs,next,pairs,setmetatable,tonumber,tostring,type
local wesnoth,table,string,math,os,debug,wml,helper,_,EoHS,_G,_ENV = wesnoth,table,string,math,os,debug,wml,EoHS.helper,EoHS._,EoHS,_G,nil

local aegis_radius = 4
local aegis_border = {}
local l = function(c)
  c.relative_to_base_image = "misc/hover-hex.png"
  return c
end
aegis_border.nw,aegis_border.sw,aegis_border.n,aegis_border.s,aegis_border.ne,aegis_border.se =
  table.unpack(EoHS.image_aggregate_sampled("misc/hover-hex.png",
    l{y2=35,x2=18}, l{y1=36,x2=18},
    l{y2=35,x1=19,x2=52}, l{y1=36,x1=19,x2=52},
    l{y2=35,x1=53}, l{y1=36,x1=53}))

-- Aegis stuff has to be checked very frequently, so we make extra structures to optimize it.
EoHS.remove_aegis_items = function(aegis)
  for hex in wml.child_range(aegis, "hex") do
    if hex.image then
      EoHS.remove_item({x=hex.x,y=hex.y,halo=hex.image})
    end
  end
end
EoHS.update_aegides = function()
  local ally_x_lists,ally_y_lists = {},{}
  for side in ipairs(wesnoth.sides) do ally_x_lists[side]={}; ally_y_lists[side]={} end
  local list = EoHS.get_scenario_variable("aegides") or {}
  for aegis in wml.child_range(list, "aegis") do
    for hex in wml.child_range(aegis, "hex") do
      for side in ipairs(wesnoth.sides) do
        if not wesnoth.sides.is_enemy(side, aegis.side) then
          table.insert(ally_x_lists[side], hex.x)
          table.insert(ally_y_lists[side], hex.y)
        end
      end
    end
  end
  for side in ipairs(wesnoth.sides) do
    EoHS.set_scenario_variable("allied_aegis_x_list_"..side, table.concat(ally_x_lists[side],","))
    EoHS.set_scenario_variable("allied_aegis_y_list_"..side, table.concat(ally_y_lists[side],","))
  end
end
EoHS.create_aegis = function(parameters)
  local list = EoHS.get_scenario_variable("aegides") or {}
  local aegis = { side = parameters.side }
  local reach = EoHS.find_reach(parameters.src_x, parameters.src_y, EoHS.passable_only(parameters.side), parameters.force_aegis_radius or EoHS.apply_farseer(aegis_radius, parameters))
  for i,hex in ipairs(reach) do reach[hex.x..","..hex.y] = true end
  for i,hex in ipairs(reach) do
    local border = {}
    for i,dir in ipairs{"nw","sw","n","s","ne","se"} do
      local x,y = EoHS.get_loc_in_direction(hex.x, hex.y, dir)
      if not reach[x..","..y] then
        table.insert(border, aegis_border[dir])
      end
    end
    if border[1] then
      hex.image = EoHS.collapse_image_aggregate("image_modded", 
        EoHS.image_aggregate_modded(
          EoHS.image_aggregates_combined("misc/blank-hex.png", table.unpack(border)),
          EoHS.colorizing_image_mod (EoHS.team_color (parameters.side).mid, 150)
        )
      ).."~SCALE(76,76)"
      EoHS.place_item({x=hex.x,y=hex.y,halo=hex.image})
    end
    table.insert(aegis, {"hex",hex})
  end
  table.insert(list, {"aegis",aegis})
  EoHS.set_scenario_variable("aegides", list)
  EoHS.update_aegides()
end
EoHS.update_aegis_ability = function(unit)
  local abilities = EoHS.force_subtag(unit, "abilities")
  EoHS.remove_subtags(abilities, "resistance", "EoHS_aegis")
  for k,v in pairs(EoHS.get_subtag(unit, "resistance")) do
    table.insert(abilities, {"resistance",{
      id = "EoHS_aegis",
      apply_to = k,
      affect_self = true,
      active_on = "defense",
          value = 100-math.ceil(v/2),
      max_value = 100-math.ceil(v/2),
      {"filter",{
        x="$EoHS.scenario_vars.allied_aegis_x_list_"..unit.side,
        y="$EoHS.scenario_vars.allied_aegis_y_list_"..unit.side,
      }}
    }})
  end
end

EoHS.at_side_turn(function()
  local list = EoHS.get_scenario_variable("aegides") or {}
  if EoHS.remove_subtags(list, "aegis", function(aegis)
    if aegis.side == wesnoth.current.side then
      EoHS.remove_aegis_items(aegis)
      return true
    end
  end) > 0 then
    EoHS.set_scenario_variable("aegides", list)
    EoHS.update_aegides()
  end
end)

local affected_hexes = function(parameters, known_or_actual)
  local result = {}
  for i,hex in ipairs(EoHS.find_reach(parameters.src_x, parameters.src_y, EoHS.known_or_actual_passable_only(parameters.side, known_or_actual), parameters.force_aegis_radius or EoHS.apply_farseer(aegis_radius, parameters))) do
    table.insert(result, {x=hex.x, y=hex.y})
  end
  return result
end

EoHS.make_spell("aegis", {
  image = "icons/circlet_winged.png~FL(horiz)",
  name = _"Aegis",
  description = _"You create a dome of protection. Until your next turn, all friendly units within four hexes of your leader take half damage on defense. This doesn't stack with other aegises.",
  
  base_cost = { action_points=5, mana=12 },
  
  no_target_but_show_UI = true,
  
  target_independent_stuff = function(parameters, extras)
    local result = {}
    if extras and extras.validity_only then return result end
    for i,hex in ipairs(affected_hexes (parameters, "known")) do
      table.insert (result, {"item", {
        x= hex.x, y= hex.y, halo = "help",
      }})
    end
    for i,hex in ipairs(affected_hexes (parameters, "actual")) do
      table.insert (result, {"visible_effect", {
        x= hex.x, y= hex.y,
      }})
    end
    return result
  end,
    
  happen = function(parameters, extras)
    EoHS.begin_casting(parameters.actor_id, parameters.target_x, parameters.target_y)
    extras.do_on_clients_who_see(function() wml.fire("sound", { name = "magic-holy-1.ogg" }) end)
    EoHS.create_aegis(parameters)
    EoHS.finish_casting(parameters.actor_id)
  end,
})

-->>)}
