this_parses_in_both_wml_and_lua=hackily--{EOHS_LUA_FILE (<<-- corridor_of_frost.cfg
-- #textdomain wesnoth-Era_of_High_Sorcery
local getmetatable,ipairs,next,pairs,setmetatable,tonumber,tostring,type = getmetatable,ipairs,next,pairs,setmetatable,tonumber,tostring,type
local wesnoth,table,string,math,os,debug,wml,helper,_,EoHS,_G,_ENV = wesnoth,table,string,math,os,debug,wml,EoHS.helper,EoHS._,EoHS,_G,nil

local get_corridor_attack = EoHS.skill_attack_func("evocation", function(attack)
  attack.description = _"corridor of frost"
  attack.type = "cold"
  attack.damage = math.floor((attack.damage*attack.number + 2) / 4)
  attack.number = 2
  table.insert(EoHS.force_subtag(attack, "specials"), EoHS.macros.WEAPON_SPECIAL_SLOW[1])
end)

EoHS.make_spell("corridor_of_frost", {
  image = "attacks/iceball.png",
  name = _"Corridor of Frost",
  description = _"You strike each unit in a 5-hex-long path with a magical, cold, slowing attack, which is 50% as powerful as your normal fireball attack. Also, every water or swamp hex in the path (not including fords) freezes into ice.",
  
  base_cost = { action_points = 7, mana = 9 },
  is_attack_spell = true,
  
  commit = function(parameters)
    local actor = EoHS.get_unit(parameters.actor_id)
    local attack = get_corridor_attack(actor)
    if attack then table.insert(parameters, {"attack", attack}) end
  end,
  
  targeting_range_override = EoHS.get_6hex_path_targeting_range,
  target_dependent_stuff = function (parameters, extras)
    if extras.validity_only then return {} end
    local result = {}
    local attack = EoHS.get_subtag(parameters, "attack")
    for index, hex in ipairs (EoHS.get_6hex_path_hexes(parameters, "known")) do
      EoHS.add_attack_stuff (result, parameters, hex.x, hex.y, attack)
    end
    for i,hex in ipairs(EoHS.get_6hex_path_hexes(parameters, "actual")) do
      table.insert (result, {"visible_effect", {
        x= hex.x, y= hex.y,
      }})
    end
    return result
  end,
  
  happen = function(parameters)
    local affected_hexes = EoHS.get_6hex_path_hexes(parameters, "actual")
    local middle = affected_hexes[math.ceil(#affected_hexes/2)]
    EoHS.begin_casting(parameters.actor_id, middle.x, middle.y)
    local actor = EoHS.get_unit(parameters.actor_id)
    local attack = EoHS.get_subtag(parameters, "attack")
    
    local casting_image = EoHS.unit_casting_image_stuff(actor, 2)
    local old_hex_frames = {}
    local temporary_animations = {}
    for i,hex in ipairs(affected_hexes) do
      local dx, dy = EoHS.pixels_to_hex(actor.x, actor.y, hex.x, hex.y)
      local duration = 500
      local start_time = -duration/2
      local anim_contents = {
        base_score=10,
        {"filter",{EoHS.has_unit_variable("corridor_of_frost_hex_number_"..i)}},
        offset=0,
        start_time = start_time,
        ice_start_time = start_time,
        { "frame", { image=casting_image, duration=duration, sound="magic-faeriefire.ogg" }},
        { "ice_frame", { auto_vflip=false,duration=duration,image="terrain/alphamask.png~CS(127,191,255)",x=dx,y=dy,layer=35,alpha="0.2~0.7,0.7~0.4" }},
        ice_flash_start_time = -80,
        { "ice_flash_frame", { auto_vflip=false,duration=160,image="terrain/alphamask.png~CS(255,255,255)",x=dx,y=dy,layer=35,alpha="0.0~1.0,1.0~0.0" }},
      }
      for i,f in ipairs(old_hex_frames) do table.insert(anim_contents, f); anim_contents["old_hex_"..i.."_start_time"] = start_time end
      table.insert(temporary_animations, {"attack_anim",anim_contents})
      --EoHS.debug_table(anim_contents)
      table.insert(old_hex_frames, {"old_hex_"..i.."_frame",{auto_vflip=false,duration=duration,image="terrain/alphamask.png~CS(127,191,255)",x=dx,y=dy,layer=35,alpha=0.4}})
    end
    EoHS.add_temporary_anims(actor, temporary_animations)
    EoHS.put_unit(actor, {immediate=true})
    EoHS.redraw()
    for i,hex in ipairs(affected_hexes) do
      --wesnoth.scroll_to_tile(hex.x, hex.y, true)
      EoHS.set_unit_variable_immediate(actor, "corridor_of_frost_hex_number_"..i, true)
      EoHS.add_terrain_change(hex.x,hex.y,{name="freeze_water"})
      local info = EoHS.spell_attack_info(actor, hex.x, hex.y, attack)
      if info then
        EoHS.game_action_simulations.attack_unit(info.context, info.extras)
        actor = EoHS.get_unit(parameters.actor_id)
      else
        wesnoth.fire("animate_unit", {
          flag="attack",
          {"filter",{x=actor.x,y=actor.y}},
          hits = true,
          with_bars = true,
        })
      end
      EoHS.set_unit_variable_immediate(actor, "corridor_of_frost_hex_number_"..i)
    end
    
    actor = EoHS.get_unit(parameters.actor_id)
    if actor then
      EoHS.remove_temporary_anims(actor)
      EoHS.put_unit(actor, {immediate=true})
    end
    EoHS.finish_casting(parameters.actor_id)
  end,
})

-->>)}
