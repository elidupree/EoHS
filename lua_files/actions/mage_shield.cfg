this_parses_in_both_wml_and_lua=hackily--{EOHS_LUA_FILE (<<-- mage_shield.cfg
-- #textdomain wesnoth-Era_of_High_Sorcery
local getmetatable,ipairs,next,pairs,setmetatable,tonumber,tostring,type = getmetatable,ipairs,next,pairs,setmetatable,tonumber,tostring,type
local wesnoth,table,string,math,os,debug,wml,filesystem,helper,_,EoHS,_G,_ENV = wesnoth,table,string,math,os,debug,wml,filesystem,EoHS.helper,EoHS._,EoHS,_G,nil

local shields_givable = function(parameters, target)
  if not target then return 1 end
  return math.max(1, math.min(target.level, parameters.shield_power or 999))
end

EoHS.make_spell("mage_shield", {
  image = "icons/shield_wooden.png",
  name = _"Mage Shield",
  description = _"You enchant a unit with a shield that blocks the next swing (no matter how strong or weak) that hits it. If the unit is higher than level 1, its shield blocks that many more attacks, but not more than your Evocation rank.",
  
  is_enchantment = true,
  
  base_cost = { action_points=5, mana=2 },
  base_range = 1,
  
  commit = function(parameters)
    local actor = EoHS.get_unit(parameters.actor_id)
    if actor then
      parameters.shield_power = EoHS.skillset_realm_rank(EoHS.get_unit_skillset(actor), "evocation")
    end
  end,
    
  target_dependent_stuff = EoHS.simple_unit_target("help", function (unit, parameters, stuff)
    local shields = EoHS.get_unit_variable(unit, "mage_shields")
    local givable = shields_givable(parameters, unit)
    if shields and (shields > givable) then
      return _"That unit has more shields than you can give it."
    elseif shields and (shields == givable) then
      return _"That unit has as many shields as you can give it."
    else
      table.insert (stuff, {"label", {
        x= parameters.target_x,y= parameters.target_y,
        text = EoHS.substitute (_"Add $1| shields", {givable - (shields or 0)})
      }})
    end
  end),
    
  happen = function(parameters, extras)
    EoHS.begin_casting(parameters.actor_id, parameters.target_x, parameters.target_y)
    local unit = EoHS.get_unit(parameters.target_x, parameters.target_y)
    EoHS.set_unit_variable(unit, "mage_shields", shields_givable(parameters, unit))
    EoHS.update_conditional_abilities(unit)
    EoHS.update_unit_graphics(unit)
    EoHS.put_unit(unit, {immediate=true})
    extras.do_on_clients_who_see(function() wml.fire("sound", { name = "magic-holy-miss-2.ogg" }) end)
    EoHS.finish_casting(parameters.actor_id)
  end,
})

EoHS.make_conditional_ability("mage_shield", function(unit)
  local shields = EoHS.get_unit_variable(unit, "mage_shields")
  if shields then
    return { "dummy", {
      name = EoHS.substitute(_"mage shield($1|)", {shields}),
      description = (shields > 1) and EoHS.substitute(_"The next $1| swings to hit this unit will be blocked.", {shields}) or _"The next swing to hit this unit will be blocked.",
    }}
  end
end)

-->>)}
