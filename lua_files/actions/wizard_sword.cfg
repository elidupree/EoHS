this_parses_in_both_wml_and_lua=hackily--{EOHS_LUA_FILE (<<-- wizard_sword.cfg
-- #textdomain wesnoth-Era_of_High_Sorcery
local getmetatable,ipairs,next,pairs,setmetatable,tonumber,tostring,type = getmetatable,ipairs,next,pairs,setmetatable,tonumber,tostring,type
local wesnoth,table,string,math,os,debug,wml,gui,filesystem,helper,_,EoHS,_G,_ENV = wesnoth,table,string,math,os,debug,wml,gui,filesystem,EoHS.helper,EoHS._,EoHS,_G,nil

EoHS.make_spell("wizard_sword", {
  image = "attacks/sword-human.png",
  name = _"Wizard Sword",
  description = _"You enchant a unit, giving it a temporary magical sword. For a normal level 1 unit, the sword is a 7-3 magical blade melee attack. Traits affect the sword damage, and damage is increased by 2 per level of the unit. The sword vanishes at the unit's fourth end-of-turn from when you cast it. Casting the spell again on the same unit increases the duration by four turns.",
  
  is_enchantment = true,
  
  base_cost = { action_points=5, mana=4 },
  base_range = 1,
  
  target_dependent_stuff = EoHS.simple_unit_target("help"),
  
  happen = function(parameters, extras)
    EoHS.begin_casting(parameters.actor_id, parameters.target_x, parameters.target_y)
    local unit = EoHS.get_unit(parameters.target_x, parameters.target_y)
    EoHS.set_unit_variable(unit, "wizard_sword_turns", (EoHS.get_unit_variable(unit, "wizard_sword_turns") or 0) + 4)
    EoHS.update_wizard_sword(unit)
    EoHS.update_unit_graphics(unit)
    EoHS.put_unit(unit, {immediate=true})
    extras.do_on_clients_who_see(function() wml.fire("sound", { name = "throwing-knife-miss.ogg" }) end)
    EoHS.finish_casting(parameters.actor_id)
  end,
})

EoHS.remove_wizard_sword = function(unit)
  EoHS.set_unit_variable(unit, "wizard_sword_turns")
  EoHS.remove_subtags(unit, "modifications.".."advancement", "EoHS_wizard_sword")
  EoHS.remove_subtags(unit, "attack", function(a) return a.name == "EoHS_wizard_sword" end)
  EoHS.update_unit_graphics(unit)
end
EoHS.update_wizard_sword = function(unit)
  local turns_left = EoHS.get_unit_variable(unit, "wizard_sword_turns")
  local modifications = EoHS.get_subtag(unit, "modifications")
  EoHS.remove_subtags(modifications, "advancement", "EoHS_wizard_sword")
  -- An advancement added at the end will be affected by traits, but not by advancements.
  table.insert(modifications, {"advancement",{id="EoHS_wizard_sword",
    {"effect",{apply_to="new_attack",
      name = "EoHS_wizard_sword",
      description = _"wizard sword",
      icon = "attacks/sword-human.png",
      range = "melee",
      type = "blade",
      damage = 5 + 2*unit.level,
      number = 3,
      { "specials", {
        EoHS.macros.WEAPON_SPECIAL_MAGICAL[1],
        { "dummy", {
          id = "EoHS_wizard_sword_disappears",
          name = EoHS.substitute(_"temporary ($1|)", {turns_left}),
          description = (turns_left == 1) and _"This weapon will disappear after the end of its wielder's turn." or
            EoHS.substitute(_"This weapon will disappear after $1| more of its ends-of-turn.", {turns_left}),
        }},
      }},
    }},
    --[[ We can't use this because it's (sometimes? I don't quite understand it) based on the unit type's level, not the individual unit's level.
    {"effect",{apply_to="attack",
      name = "EoHS_wizard_sword",
      times = "per level",
      increase_damage = 2,
    }}, ]]
  }})
  EoHS.remove_subtags(unit, "attack")
end

EoHS.at_side_turn_end("wizard_sword_turns", function(units)
  for i,unit in ipairs(units.with_variable.wizard_sword_turns or {}) do
    if unit.side == wesnoth.current.side then
      local turns_left = EoHS.get_unit_variable(unit, "wizard_sword_turns") - 1
      if turns_left > 0 then
        EoHS.set_unit_variable(unit, "wizard_sword_turns", turns_left)
        EoHS.update_wizard_sword(unit)
      else
        EoHS.remove_wizard_sword(unit)
      end
      EoHS.put_unit(unit)
    end
  end
end)

-->>)}
